#!/bin/bash
#
#

# global variables
DISTRO=""

#
detect_distro() {
  if [ -f /etc/debian_version ]; then
    DISTRO="Debian"
  elif [ -f /etc/redhat-release ]; then
    if grep Fedora /etc/redhat-release 1>/dev/null 2>&1; then
      DISTRO="Fedora"
    else
      DISTRO="Redhat"
    fi
  elif [ -f /etc/SuSE-release ]; then
    DISTRO="SuSE"
  elif [ -f /etc/arch-release ]; then
    DISTRO="ARCH"
  fi
}

# blender build help info
#
function print_build_blender_help () {

    cat << EOF

FUNCTION ARGUMENTS:

    -h, --help
        Show this message and return.

    -s <path>, --source=<path>
        Use a source code path (defaults to '\$SRC').

    -i <path>, --install=<path>
        Path where to install blender (defaults to '\$INST').

    -b <path>, --build=<path>
        Path to build cmake project. (defaults to '\$BUILDPATH').

EOF

}

# blender build helper
#
# run this function in the blender source directory
function build_blender () {

    # copy from blender svn source
    local SRC="./"
    local INST=".local"
    local BUILDPATH="./build"	# build dir for cmake

    local ARGS=`getopt -o "hs:i:b:" -l "help,source:,install:,build:" -n "getopt.sh" -- "$@"`
    if [ $? != 0 ]; then echo "Terminating..." >&2; return 1; fi

    eval set -- "$ARGS"
    while true; do
	case $1 in
	    -h|--help)
		print_build_blender_help
		shift
		;;
	    -s|--source)
		SRC="$2"
		shift 2
		;;
	    -i|--install)
		INST="$2"
		shift 2
		;;
	    -b|--build)
		BUILDPATH="$2"
		shift 2
		;;
	    --)
		shift
		break
		;;
	    *)
 		echo "Wrong parameter!"
		return 1
		;;
	esac
    done

    # get the absolute path
    SRC=`readlink -f ${SRC}`
    BUILDPATH=`readlink -f ${BUILDPATH}`
    INST=`readlink -f ${INST}`

    # mkdir -p $BUILDPATH || (echo "Fail to create folder for building! Abort \
    # ..."; return 1)

    pushd $BUILDPATH

    cmake $SRC -DBUILD_SHARED_LIBS:BOOL=OFF \
	-DWITH_FFTW3:BOOL=ON \
	-DWITH_JACK:BOOL=ON \
	-DWITH_CODEC_SNDFILE:BOOL=ON \
	-DWITH_CODEC_FFMPEG:BOOL=ON \
	-DWITH_IMAGE_OPENJPEG:BOOL=ON \
	-DWITH_OPENCOLLADA:BOOL=ON \
	-DWITH_PYTHON:BOOL=ON \
	-DWITH_PYTHON_INSTALL:BOOL=ON \
	-DWITH_GAMEENGINE:BOOL=ON \
	-DWITH_OPENCOLORIO:BOOL=ON \
	-DOPENCOLORIO_INCLUDE_DIR:PATH=/usr/include/OpenColorIO \
	-DWITH_CYCLES:BOOL=ON \
	-DWITH_OPENIMAGEIO:BOOL=ON \
	-DOPENIMAGEIO_ROOT_DIR:PATH=/usr \
	-DWITH_PLAYER:BOOL=ON \
	-DWITH_INSTALL_PORTABLE:BOOL=OFF \
	-DWITH_MOD_OCEANSIM:BOOL=ON \
	-DWITH_LLVM:BOOL=ON \
	-DPYTHON_VERSION=3.3 \
	-DPYTHON_LIBPATH=/usr/lib64 \
	-DPYTHON_LIBRARY=python3.3m \
	-DPYTHON_INCLUDE_DIRS=/usr/include/python3.3m \
	-DCMAKE_INSTALL_PREFIX:PATH=${INST}

    make

    popd
}
